<!DOCTYPE html>
<html lang="es">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Tutoriales y Guías HTML</title>
    <link rel="stylesheet" href="/projects/vlog/css/tutoriales.css">
    <link rel="shortcut icon" type="image/png" href="/assets/EmoteBulldog 28x28.png">
</head>

<body>
 <header>
        <%- include('partials/header') %> 
    </header>
    <div class="main-content-hero">
        <h1 class="page-main-title text-center">Tutoriales y Guías De Programacion</h1>
        <p class="text-h-light-gray text-center page-description">Encuentra guías y tutoriales detallados sobre
            Angular, JavaScript, instalaciones de software, y recursos de ciberseguridad para desarrolladores y
            entusiastas.</p>
    </div>

    <main class="container">
        <div id="postsContainer" class="tutorials-list__cards-grid">
            <!-- ¡¡¡ESTE CONTENIDO SE GENERARÁ DINÁMICAMENTE CON JAVASCRIPT!!! -->
            <!-- Este mensaje se mostrará mientras los tutoriales se cargan desde la base de datos. -->
            <p style="text-align: center; color: var(--text-color-secondary);">Cargando tutoriales...</p>
        </div>

        <button id="loadMoreButton" class="submit-button" style="display:none;">Cargar más</button>
    </main>

    <footer>
        <p>&copy; 2024 Ludwing Díaz. Todos los derechos reservados.</p>
    </footer>

    <script src="/projects/vlog/js/theme-switcher.js"></script>
    <script src="/projects/vlog/js/tutoriales.js"></script>
    <script src="/projects/vlog/js/auth.js"></script>
</body>
<script>document.addEventListener('DOMContentLoaded', () => {
    const hamburgerMenu = document.querySelector('.hamburger-menu');
    const mainNavAndToggleWrapper = document.querySelector('.main-nav-and-toggle-wrapper');
    const body = document.body;
    const themeToggle = document.getElementById('theme-toggle'); // Asegúrate de que este ID exista en tu HTML

    // Toggle del menú de hamburguesa
    hamburgerMenu.addEventListener('click', () => {
        mainNavAndToggleWrapper.classList.toggle('active');
        hamburgerMenu.classList.toggle('active');
        body.classList.toggle('menu-open'); // Para evitar el scroll del body
    });

    // Cerrar menú al hacer clic en un enlace (opcional, pero buena práctica)
    mainNavAndToggleWrapper.querySelectorAll('a').forEach(link => {
        link.addEventListener('click', () => {
            mainNavAndToggleWrapper.classList.remove('active');
            hamburgerMenu.classList.remove('active');
            body.classList.remove('menu-open');
        });
    });

    // Toggle del tema (Modo Claro/Oscuro)
    // Asegúrate de que esta lógica ya esté presente y funcione con el nuevo HTML
    themeToggle.addEventListener('click', () => {
        body.classList.toggle('dark-mode');
        // Guardar preferencia en localStorage (opcional)
        if (body.classList.contains('dark-mode')) {
            localStorage.setItem('theme', 'dark');
        } else {
            localStorage.setItem('theme', 'light');
        }
    });

    // Cargar preferencia de tema al inicio
    const savedTheme = localStorage.getItem('theme');
    if (savedTheme === 'dark') {
        body.classList.add('dark-mode');
    } else if (savedTheme === 'light') {
        body.classList.remove('dark-mode');
    } else {
        // Si no hay preferencia guardada, usar la preferencia del sistema
        if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {
            body.classList.add('dark-mode');
        }
    }
});
</script>
</html>
